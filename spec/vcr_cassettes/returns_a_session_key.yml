---
http_interactions:
- request:
    method: get
    uri: https://www.migros-fitness.ch/karte
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - FitnessparkApi 0.1.0
      Host:
      - www.migros-fitness.ch
      Origin:
      - https://www.migros-fitness.ch
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      X-Frame-Options:
      - SAMEORIGIN
      Set-Cookie:
      - ASP.NET_SessionId=n3est115qbmpocye5y2fz3xy; path=/; HttpOnly; SameSite=Lax
      - SC_ANALYTICS_GLOBAL_COOKIE=9a832d4c2f534bc59758da4dc4d664cc|False; expires=Thu,
        24-Oct-2030 14:34:18 GMT; path=/; HttpOnly
      - wwwmigrosfitnessch#lang=de; path=/
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Mon, 26 Oct 2020 14:34:18 GMT
      Content-Length:
      - '9877'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 26 Oct 2020 14:34:18 GMT
recorded_with: VCR 6.0.0
